/* tslint:disable */
/* eslint-disable */
/**
 * eHelply SDK - 1.1.74
 * eHelply SDK for SuperStack Services
 *
 * The version of the OpenAPI document: 1.1.74
 * Contact: support@ehelply.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    HTTPValidationError,
    HTTPValidationErrorFromJSON,
    HTTPValidationErrorToJSON,
    UserPasswordResetConfirmation,
    UserPasswordResetConfirmationFromJSON,
    UserPasswordResetConfirmationToJSON,
} from '../models';

export interface ResetPasswordConfirmationUsersAuthPasswordResetConfirmPostRequest {
    userPasswordResetConfirmation: UserPasswordResetConfirmation;
}

/**
 * AuthApi - interface
 * 
 * @export
 * @interface AuthApiInterface
 */
export interface AuthApiInterface {
    /**
     * Resets the given user\'s password to the given password when the proper code is provided
     * @summary Reset Password Confirmation
     * @param {UserPasswordResetConfirmation} userPasswordResetConfirmation 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuthApiInterface
     */
    resetPasswordConfirmationUsersAuthPasswordResetConfirmPostRaw(requestParameters: ResetPasswordConfirmationUsersAuthPasswordResetConfirmPostRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<any>>;

    /**
     * Resets the given user\'s password to the given password when the proper code is provided
     * Reset Password Confirmation
     */
    resetPasswordConfirmationUsersAuthPasswordResetConfirmPost(requestParameters: ResetPasswordConfirmationUsersAuthPasswordResetConfirmPostRequest, initOverrides?: RequestInit): Promise<any>;

}

/**
 * 
 */
export class AuthApi extends runtime.BaseAPI implements AuthApiInterface {

    /**
     * Resets the given user\'s password to the given password when the proper code is provided
     * Reset Password Confirmation
     */
    async resetPasswordConfirmationUsersAuthPasswordResetConfirmPostRaw(requestParameters: ResetPasswordConfirmationUsersAuthPasswordResetConfirmPostRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<any>> {
        if (requestParameters.userPasswordResetConfirmation === null || requestParameters.userPasswordResetConfirmation === undefined) {
            throw new runtime.RequiredError('userPasswordResetConfirmation','Required parameter requestParameters.userPasswordResetConfirmation was null or undefined when calling resetPasswordConfirmationUsersAuthPasswordResetConfirmPost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/sam/users/auth/password/reset/confirm`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: UserPasswordResetConfirmationToJSON(requestParameters.userPasswordResetConfirmation),
        }, initOverrides);

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     * Resets the given user\'s password to the given password when the proper code is provided
     * Reset Password Confirmation
     */
    async resetPasswordConfirmationUsersAuthPasswordResetConfirmPost(requestParameters: ResetPasswordConfirmationUsersAuthPasswordResetConfirmPostRequest, initOverrides?: RequestInit): Promise<any> {
        const response = await this.resetPasswordConfirmationUsersAuthPasswordResetConfirmPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
